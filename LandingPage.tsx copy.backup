import { motion, useScroll, useTransform } from 'framer-motion';
import { Link, useNavigate } from 'react-router-dom';
import React, { useEffect, useState, useRef } from 'react';

import { 
  Zap, 
  Shield, 
  Code, 
  Palette, 
  TrendingUp,
  CheckCircle,
  Star,
  ArrowRight,
  Play,
  Sparkles,
  Package,
  Layers,
  Users,
  Globe,
  Clock,
  Target,
  ShoppingCart,
  Monitor,
  Smartphone,
  Tablet,
  ChevronRight,
  Plus,
  Minus,
  Heart,
  Eye,
  Copy,
  Download,
  Settings,
  BarChart3,
  Search,
  Calendar,
  Tag,
  ShieldCheck,
  Megaphone,
  Truck,
  LayoutGrid,
  Menu,
  AlertTriangle,
  Percent,
  Store,
  User
} from 'lucide-react';
import type { Module } from '../types/api';
import ModuleCard from '../components/ui/ModuleCard';
import ValuePropositionSection from '../components/landing/ValuePropositionSection';

import SEO from '../components/SEO';
import ModulesShowcaseSection from '../components/landing/ModulesShowcaseSection';
import WorkflowSection from '../components/landing/WorkflowSection';
import JoinMovementSection from '../components/landing/SocialProofSection';
import StatsSection from '../components/landing/StatsSection';
import EarlyBirdPricingSection from '../components/landing/PricingSection';
import NoMoreSubscriptionsSection from '../components/landing/NoMoreSubscriptionsSection';
import TransitionSection from '../components/landing/TransitionSection';
import ROICalculatorSection from '../components/sections/ROICalculatorSection';
import PhonePreviewSection from '../components/landing/PhonePreviewSection';
import FAQSection from '../components/landing/FAQSection';
import { AnimatedButton, AnimatedCard } from '../components/ui/MicroAnimations';
import { useAuth } from '../contexts/AuthContext';
import { metaPixel } from '../services/metaPixel';


export default function LandingPage() {
  const navigate = useNavigate();
  const containerRef = useRef<HTMLDivElement>(null);
  const { scrollYProgress } = useScroll({
    target: containerRef,
    offset: ["start start", "end start"]
  });

  // Add CSS animation for gradient shift, SVG separators, and glassmorphism effects
  React.useEffect(() => {
    const style = document.createElement('style');
    style.textContent = `
      @keyframes subtleGradient {
        0% { background-position: 0% 50%; }
        50% { background-position: 100% 50%; }
        100% { background-position: 0% 50%; }
      }
      
      @keyframes sweep {
        0% { background-position: 0% 50%; }
        50% { background-position: 100% 50%; }
        100% { background-position: 0% 50%; }
      }
      
      @keyframes blob {
        0% { transform: translate(0px, 0px) scale(1); }
        33% { transform: translate(30px, -50px) scale(1.1); }
        66% { transform: translate(-20px, 20px) scale(0.9); }
        100% { transform: translate(0px, 0px) scale(1); }
      }
      
      .animate-blob {
        animation: blob 7s infinite ease-in-out;
      }
      
      .animation-delay-2000 {
        animation-delay: 2s;
      }
      
      .animation-delay-4000 {
        animation-delay: 4s;
      }
      
      .bg-grid-dark {
        background-image: linear-gradient(rgba(99,102,241,0.1) 0.5px, transparent 0.5px), linear-gradient(90deg, rgba(99,102,241,0.1) 0.5px, transparent 0.5px);
        background-size: 40px 40px;
      }
      
      .row {
        width: 100%;
        padding: 0;
        margin: 0;
        display: flex;
        justify-content: center;
        flex-direction: column;
        position: relative;
      }
      
      .svg-separator {
        display: block;
        background: 0 0;
        position: absolute;
        left: 0;
        right: 0;
        top: 0;
        z-index: 9;
        -webkit-transform: translateY(-100%) translateY(2px);
        transform: translateY(-100%) translateY(2px);
        width: 100%;
      }
      
      .sep4 {
        transform: translateY(-100%) translateY(2px) scale(1,1);
        transform-origin: top;
      }
      
      .sep5 {
        transform: translateY(-100%) translateY(2px) scale(1,1);
        transform-origin: top;
      }
      
      .green2 {
        background-color: #0A0616;
      }

      .subtle-animated-gradient {
        background: linear-gradient(-45deg, #ffffff, #f0f2ff, #e6e8ff, #f0f2ff, #ffffff);
        background-size: 400% 400%;
        animation: subtleGradient 25s ease infinite;
      }

      .bg-grid-light {
        background-image: linear-gradient(rgba(99, 102, 241, 0.1) 0.5px, transparent 0.5px), linear-gradient(90deg, rgba(99, 102, 241, 0.1) 0.5px, transparent 0.5px);
        background-size: 40px 40px;
      }

      .gradient-text {
        background: linear-gradient(
          135deg,
          #6366f1 0%,
          #a855f7 25%,
          #3b82f6 50%,
          #8b5cf6 75%,
          #6366f1 100%
        );
        background-size: 300% 300%;
        background-clip: text;
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        animation: gradientShift 6s ease-in-out infinite;
      }

      @keyframes gradientShift {
        0%, 100% {
          background-position: 0% 50%;
        }
        50% {
          background-position: 100% 50%;
        }
      }

      /* Hide scrollbar for mobile category slider */
      .scrollbar-hide {
        -ms-overflow-style: none;
        scrollbar-width: none;
      }
      .scrollbar-hide::-webkit-scrollbar {
        display: none;
      }

      /* MOBILE CONSTRAINTS - Only for hero section */
      @media (max-width: 640px) {
        .hero-section * {
          box-sizing: border-box !important;
        }
        .hero-section .w-full, 
        .hero-section .max-w-6xl, 
        .hero-section .max-w-7xl, 
        .hero-section .max-w-4xl, 
        .hero-section .max-w-3xl, 
        .hero-section .max-w-xl {
          max-width: 100vw !important;
        }
      }

      @keyframes fadeInUp {
        from {
          opacity: 0;
          transform: translateY(20px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      /* Smooth scrolling for better UX */
      html {
        scroll-behavior: smooth;
      }

      /* Eliminate white gaps between sections */
      section, div[id] {
        display: block;
        margin: 0;
        padding: 0;
        line-height: 0;
      }

      section > *, div[id] > * {
        line-height: normal;
      }
      
      @media (prefers-reduced-motion: reduce) {
        html {
          scroll-behavior: auto;
        }
      }
    `;
    document.head.appendChild(style);
    
    return () => {
      document.head.removeChild(style);
    };
  }, []);

  const y = useTransform(scrollYProgress, [0, 1], ["0%", "50%"]);
  const [activeDemo, setActiveDemo] = useState(0);
  const [search, setSearch] = useState('');
  const [activeTag, setActiveTag] = useState('All');
  const [placeholderIndex, setPlaceholderIndex] = useState(0);
  const [placeholderText, setPlaceholderText] = useState('');
  const [isTyping, setIsTyping] = useState(true);
  const [cursorVisible, setCursorVisible] = useState(true);

  // Enhanced placeholder animation with innovative effects
  const placeholders = [
    "Search a module...",
    "Find product sections...",
    "Look for cart modules...",
    "Browse trust elements..."
  ];

  // Simplified and stable typing animation
  React.useEffect(() => {
    const currentPlaceholder = placeholders[placeholderIndex];
    
    if (isTyping) {
      let currentIndex = 0;
      const typeInterval = setInterval(() => {
        if (currentIndex <= currentPlaceholder.length) {
          setPlaceholderText(currentPlaceholder.slice(0, currentIndex));
          currentIndex++;
        } else {
          clearInterval(typeInterval);
          setTimeout(() => setIsTyping(false), 2000);
        }
      }, 80);
      
      return () => clearInterval(typeInterval);
    } else {
      let currentIndex = currentPlaceholder.length;
      const deleteInterval = setInterval(() => {
        if (currentIndex >= 0) {
          setPlaceholderText(currentPlaceholder.slice(0, currentIndex));
          currentIndex--;
        } else {
          clearInterval(deleteInterval);
          setPlaceholderIndex((prev) => (prev + 1) % placeholders.length);
          setTimeout(() => setIsTyping(true), 500);
        }
      }, 40);
      
      return () => clearInterval(deleteInterval);
    }
  }, [placeholderIndex, isTyping]);

  // Cursor blink effect
  React.useEffect(() => {
    const cursorInterval = setInterval(() => {
      setCursorVisible(prev => !prev);
    }, 600);
    return () => clearInterval(cursorInterval);
  }, []);

  // Header animation based on scroll - more fluid and organic
  const [scrollY, setScrollY] = useState(0);
  // Header animation based on scroll - optimized for performance
  const { scrollYProgress: headerScrollProgress } = useScroll({
    // Use more efficient offset values with fewer calculations
    offset: ["start start", "start -10%"]
  });
  
  // Simplified animation values with minimal interpolation points
  const headerY = useTransform(headerScrollProgress, [0, 0.2], [0, 0]);
  const headerOpacity = useTransform(headerScrollProgress, [0, 0.2], [1, 1]);
  const headerBorderRadius = useTransform(headerScrollProgress, [0, 0.2], [16, 16]);
  const headerBoxShadow = useTransform(
    headerScrollProgress,
    [0, 0.2],
    ["0 4px 20px rgba(0, 0, 0, 0.1)", "0 4px 20px rgba(0, 0, 0, 0.15)"]
  );
  
  // Optimized scroll handler with throttling - reduced frequency
  useEffect(() => {
    let ticking = false;
    const handleScroll = () => {
      if (!ticking) {
        window.requestAnimationFrame(() => {
          setScrollY(window.scrollY);
          ticking = false;
        });
        ticking = true;
      }
    };
    
    window.addEventListener("scroll", handleScroll, { passive: true });
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);
  
  // For compatibility with the rest of the code
  const [isScrolled, setIsScrolled] = useState(false);
  const [scrollProgress, setScrollProgress] = useState(0);
  
  useEffect(() => {
    setIsScrolled(scrollY > 50);
    setScrollProgress(Math.min(scrollY / 300, 1)); // Reduced sensitivity
  }, [scrollY]);

  // Meta Pixel tracking for landing page
  useEffect(() => {
    // 🎯 DÉDUPLICATION CORRECTE: Attendre que le pixel soit initialisé
    const initAndTrack = async () => {
      // S'assurer que l'init est fait (normalement déjà fait par auto-init)
      metaPixel.init();
      
      // Petit délai pour s'assurer que l'init est complète
      await new Promise(resolve => setTimeout(resolve, 100));
      
      // Track landing page view avec déduplication
      metaPixel.trackPageView();
      metaPixel.trackViewContent();
    };
    
    initAndTrack();
  }, []);

  // ⚡ LANDING ULTRA RAPIDE : Données statiques - 0ms de chargement
  const [allModules, setAllModules] = useState<Module[]>([]);
  
  useEffect(() => {
    // Import dynamique des données statiques pour éviter le bundle size
    import('../data/staticModules').then(({ staticModules }) => {
      setAllModules(staticModules);
      console.log('⚡ LANDING: Modules statiques chargés instantanément -', staticModules.length, 'modules');
    });
  }, []);

  // Badge icons mapping for categories
  const badgeIcons: Record<string, React.ElementType> = {
    'Product Display': LayoutGrid,
    'Marketing': Megaphone,
    'Trust': ShieldCheck,
    'User Experience': Eye,
    'Product Info': Tag,
    'Social Proof': Eye,
    'Navigation': Menu,
    'Checkout': ShoppingCart,
    'FOMO': AlertTriangle,
    'Urgency': Clock,
    'Shipping': Truck,
    'Reviews': Star,
    'Announcements': Megaphone,
    'Design': LayoutGrid,
    'Offers': Percent,
    'Recently Added': Calendar,
  };

  // Get unique categories from real modules
  const uniqueCategories = React.useMemo(() => {
    if (!allModules || allModules.length === 0) return [];
    
    // Clean and normalize categories to avoid duplicates
    const categoryMap = new Map();
    
    allModules.forEach(module => {
      // Ensure category is a string before processing
      const rawCategory = typeof module.category === 'string' ? module.category.trim() : '';
      if (rawCategory && rawCategory.length > 0) {
        const normalized = rawCategory.toLowerCase();
        // Keep the first occurrence (with original casing)
        if (!categoryMap.has(normalized)) {
          categoryMap.set(normalized, rawCategory);
        }
      }
    });
    
    return Array.from(categoryMap.values()).sort();
  }, [allModules]);

  // Filter modules based on search and category
  const filteredModules = React.useMemo(() => {
    if (!allModules) return [];
    let filtered = allModules;
    
    if (activeTag !== 'All') {
      // Case-insensitive and trimmed comparison to match our normalization
      filtered = filtered.filter(module => {
        const moduleCategory = typeof module.category === 'string' ? module.category.trim() : '';
        return moduleCategory.toLowerCase() === activeTag.toLowerCase();
      });
      
      // Pour les catégories spécifiques, montrer plus de modules (jusqu'à 15)
      // pour éviter d'avoir seulement 2-3 modules qui donnent une mauvaise impression
      return filtered.slice(0, Math.max(15, Math.ceil(filtered.length * 0.8)));
    }
    
    if (search) {
      filtered = filtered.filter(module =>
        module.title.toLowerCase().includes(search.toLowerCase()) ||
        (module.description && module.description.toLowerCase().includes(search.toLowerCase()))
      );
    }
    
    // ⚡ OPTIMISATION PERFORMANCE : Logique simplifiée et plus rapide
    if (activeTag === 'All' && !search) {
      // Tri simple par popularité globale pour un affichage instantané
      return [...filtered]
        .sort((a, b) => {
          const aScore = (a.rating || 0) * 10 + (a.featured ? 100 : 0);
          const bScore = (b.rating || 0) * 10 + (b.featured ? 100 : 0);
          return bScore - aScore;
        })
        .slice(0, 12);
    }

    return filtered.slice(0, 12);
  }, [allModules, activeTag, search]);

  const allTags = ['All', ...uniqueCategories];

  // Keep reasonable number of tags but ensure "All" is always visible
  const displayTags = allTags.slice(0, 12);

  // UNIFIED category color mapping function for desktop AND mobile
  const getCategoryStyle = (tagName: string) => {
    // EXACT mapping by category name - each category has its UNIQUE color
    switch (tagName) {
      case 'All':
        return { 
          bg: 'bg-white/10', 
          border: 'border-white/30', 
          emoji: '', 
          activeBg: 'bg-white' 
        };
      
      case 'Announcements':
        return { bg: 'bg-indigo-900/60', border: 'border-indigo-500/60', emoji: '📢' };
      
      case 'Design':
        return { bg: 'bg-purple-900/60', border: 'border-purple-500/60', emoji: '🎨' };
      
      case 'Offers':
        return { bg: 'bg-emerald-900/60', border: 'border-emerald-500/60', emoji: '🎁' };
      
      case 'Product Info':
        return { bg: 'bg-cyan-900/60', border: 'border-cyan-500/60', emoji: '📋' };
      
      case 'Reviews':
        return { bg: 'bg-green-900/60', border: 'border-green-500/60', emoji: '⭐' };
      
      case 'Shipping':
        return { bg: 'bg-yellow-900/60', border: 'border-yellow-500/60', emoji: '🚚' };
      
      case 'Social Proof':
        return { bg: 'bg-orange-900/60', border: 'border-orange-500/60', emoji: '💬' };
      
      case 'Trust':
        return { bg: 'bg-teal-900/60', border: 'border-teal-500/60', emoji: '🛡️' };
      
      case 'Urgency':
        return { bg: 'bg-red-900/60', border: 'border-red-500/60', emoji: '⏰' };
      
      // Additional colors for other potential categories
      case 'Navigation':
        return { bg: 'bg-blue-900/60', border: 'border-blue-500/60', emoji: '🧭' };
      
      case 'Checkout':
        return { bg: 'bg-emerald-900/60', border: 'border-emerald-500/60', emoji: '🛒' };
      
      case 'FOMO':
        return { bg: 'bg-yellow-900/60', border: 'border-yellow-500/60', emoji: '🔥' };
      
      case 'Marketing':
        return { bg: 'bg-sky-900/60', border: 'border-sky-500/60', emoji: '📈' };
      
      case 'User Experience':
        return { bg: 'bg-lime-900/60', border: 'border-lime-500/60', emoji: '👁️' };
      
      case 'Product Display':
        return { bg: 'bg-fuchsia-900/60', border: 'border-fuchsia-500/60', emoji: '🖼️' };
      
      case 'Recently Added':
        return { bg: 'bg-violet-900/60', border: 'border-violet-500/60', emoji: '🆕' };
      
      // Default for new categories
      default:
        return { bg: 'bg-slate-900/60', border: 'border-slate-500/60', emoji: '🔧' };
    }
  };
  // Ref for the mini-slider container
  const miniSliderRef = useRef<HTMLDivElement>(null);
  const [isMiniSliderHovered, setIsMiniSliderHovered] = useState(false);
  const [autoScrollActive, setAutoScrollActive] = useState(true);
  // Auto-scroll direction: 1 = right, -1 = left
  const [scrollDirection, setScrollDirection] = useState(1);

  // Check if user is authenticated
  const { user } = useAuth();
  const isAuthenticated = !!user;
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);

  // Close mobile menu when clicking outside
  useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      if (isMobileMenuOpen && !(event.target as Element).closest('nav')) {
        setIsMobileMenuOpen(false);
      }
    };

    document.addEventListener('mousedown', handleClickOutside);
    return () => document.removeEventListener('mousedown', handleClickOutside);
  }, [isMobileMenuOpen]);

  // Auto-scroll logic for mini-slider
  useEffect(() => {
    // Disable auto-scroll if a category is selected
    setAutoScrollActive(activeTag === 'All');
  }, [activeTag]);

  useEffect(() => {
    if (!autoScrollActive || isMiniSliderHovered) return;
    const el = miniSliderRef.current;
    if (!el) return;
    let frame: number;
    let direction = scrollDirection;
    const speed = 0.6; // px per frame, slightly faster

    const animate = () => {
      if (!el) return;
      // Scroll in current direction
      el.scrollLeft += direction * speed;
      // If reached end, reverse direction
      if (el.scrollLeft <= 0) {
        el.scrollLeft = 0;
        direction = 1;
      } else if (el.scrollLeft >= el.scrollWidth - el.clientWidth - 1) {
        el.scrollLeft = el.scrollWidth - el.clientWidth;
        direction = -1;
      }
      setScrollDirection(direction);
      frame = requestAnimationFrame(animate);
    };
    frame = requestAnimationFrame(animate);
    return () => cancelAnimationFrame(frame);
  }, [autoScrollActive, isMiniSliderHovered, scrollDirection]);

  // Restore fade effect for mini-slider
  useEffect(() => {
    const el = miniSliderRef.current;
    if (!el) return;
    function updateMask() {
      if (!el) return;
      const { scrollLeft, scrollWidth, clientWidth } = el;
      const isAtStart = scrollLeft <= 0;
      const isAtEnd = scrollLeft >= scrollWidth - clientWidth - 1;
      if (isAtStart && isAtEnd) {
        el.style.maskImage = 'none';
        el.style.webkitMaskImage = 'none';
      } else if (isAtStart) {
        el.style.maskImage = 'linear-gradient(to right, black 0%, black 92%, transparent 100%)';
        el.style.webkitMaskImage = 'linear-gradient(to right, black 0%, black 92%, transparent 100%)';
      } else if (isAtEnd) {
        el.style.maskImage = 'linear-gradient(to right, transparent 0%, black 8%, black 100%)';
        el.style.webkitMaskImage = 'linear-gradient(to right, transparent 0%, black 8%, black 100%)';
      } else {
        el.style.maskImage = 'linear-gradient(to right, transparent 0%, black 8%, black 92%, transparent 100%)';
        el.style.webkitMaskImage = 'linear-gradient(to right, transparent 0%, black 8%, black 92%, transparent 100%)';
      }
    }
    updateMask();
    const handleScroll = () => { if (miniSliderRef.current) updateMask(); };
    const handleResize = () => { if (miniSliderRef.current) updateMask(); };
    el.addEventListener('scroll', handleScroll);
    window.addEventListener('resize', handleResize);
    return () => {
      el.removeEventListener('scroll', handleScroll);
      window.removeEventListener('resize', handleResize);
    };
  }, [filteredModules.length]);

  return (
    <div className="w-full max-w-full min-h-screen overflow-x-hidden" ref={containerRef}>
      <SEO 
        title="Liquidfy - 150+ Premium Shopify Modules & Sections | No-Code Installation"
        description="Transform your Shopify store with 150+ premium modules and sections. Install in 3 clicks, no coding required. Free plan available, Early Bird lifetime at $99, Pro at $29/month, Enterprise at $99/month."
        keywords="shopify modules, shopify sections, ecommerce tools, shopify enhancement, product gallery, countdown timer, shopify reviews, no code shopify, shopify customization, dynamic variables"
        image="https://liquidfy.app/og-image.png"
        url="https://liquidfy.app/"
      />

      {/* Floating Navigation - Premium Design with Mobile Menu */}
      <nav className="fixed top-0 z-50 w-full flex justify-center px-4 mx-auto">
        <motion.div 
          className="w-full max-w-7xl px-4 sm:px-6 py-3 my-2 rounded-xl backdrop-blur-lg glass-panel-dark border border-white/10"
          initial={{ y: 0, opacity: 1 }}
          style={{
            y: headerY,
            opacity: headerOpacity,
            borderRadius: headerBorderRadius,
            boxShadow: headerBoxShadow
          }}
        >
          <div className="flex items-center justify-between w-full gap-4">
            {/* Logo */}
            <Link to="/" className="flex items-center space-x-2 transition-colors duration-200 hover:text-white/90">
              <img 
                src="/LIQUIDFY-LOGO.png" 
                alt="Liquidfy Logo" 
                className="w-8 h-8 object-contain"
              />
              <span className="text-lg font-semibold text-white">
                Liquidfy
              </span>
            </Link>
            
            {/* Desktop Menu items - centered */}
            <div className="hidden md:flex items-center justify-center flex-1">
              <div className="flex items-center space-x-2">
                <a 
                  href="#features" 
                  className="px-4 py-2 text-sm font-medium text-white/90 hover:text-white transition-colors duration-200"
                >
                  Features
                </a>
                <a 
                  href="#benefits" 
                  className="px-4 py-2 text-sm font-medium text-white/90 hover:text-white transition-colors duration-200"
                >
                  Benefits
                </a>
                <a 
                  href="#demo" 
                  className="px-4 py-2 text-sm font-medium text-white/90 hover:text-white transition-colors duration-200"
                >
                  How it Works
                </a>
                <a 
                  href="#preview" 
                  className="px-4 py-2 text-sm font-medium text-white/90 hover:text-white transition-colors duration-200"
                >
                  Preview
                </a>
                <a 
                  href="#showcase" 
                  className="px-4 py-2 text-sm font-medium text-white/90 hover:text-white transition-colors duration-200"
                >
                  Library
                </a>
                <a 
                  href="#pricing" 
                  className="px-4 py-2 text-sm font-medium text-white/90 hover:text-white transition-colors duration-200"
                >
                  Pricing
                </a>
              </div>
            </div>
            
            {/* Desktop CTA - Clean and Modern */}
            <div className="hidden md:flex items-center gap-4">
              {isAuthenticated ? (
                <Link 
                  to="/dashboard" 
                  className="rounded-xl px-3 py-2 text-white font-medium text-sm transition-all duration-200 bg-gradient-to-r from-violet-600 to-violet-500 hover:from-violet-700 hover:to-violet-600"
                >
                  Dashboard
                </Link>
              ) : (
                <>
                  <Link 
                    to="#pricing"
                    onClick={(e) => {
                      e.preventDefault();
                      document.getElementById('pricing')?.scrollIntoView({ behavior: 'smooth' });
                    }}
                    className="group relative rounded-xl px-4 py-2 bg-gradient-to-r from-violet-600 to-violet-500 text-white font-semibold text-sm transition-all duration-300 hover:from-violet-700 hover:to-violet-600 whitespace-nowrap flex items-center gap-2 overflow-hidden"
                    style={{
                      background: 'linear-gradient(90deg, #7c3aed, #8b5cf6, #a855f7, #8b5cf6, #7c3aed)',
                      backgroundSize: '200% 100%',
                      animation: 'sweep 3s ease-in-out infinite'
                    }}
                  >
                    Unlimited
<span className="bg-violet-700/50 px-2 py-0.5 rounded-md text-xs font-bold">$99</span>
                  </Link>
                  <Link
                    to="/auth"
                    className="p-2 rounded-lg bg-white/10 backdrop-blur-sm border border-white/20 text-white hover:bg-white/20 transition-colors duration-200"
                  >
                    <User className="w-5 h-5" />
                  </Link>
                </>
              )}
            </div>

            {/* Mobile Menu Button */}
            <div className="md:hidden flex items-center gap-3">
              {!isAuthenticated && (
                <Link 
                  to="#pricing"
                  onClick={(e) => {
                    e.preventDefault();
                    document.getElementById('pricing')?.scrollIntoView({ behavior: 'smooth' });
                  }}
                  className="rounded-lg px-2 py-2 bg-gradient-to-r from-violet-600 to-violet-500 text-white font-semibold text-sm transition-all duration-200 hover:from-violet-700 hover:to-violet-600 whitespace-nowrap flex items-center gap-1 overflow-hidden"
                  style={{
                    background: 'linear-gradient(90deg, #7c3aed, #8b5cf6, #a855f7, #8b5cf6, #7c3aed)',
                    backgroundSize: '200% 100%',
                    animation: 'sweep 3s ease-in-out infinite'
                  }}
                >
                  Unlimited
                 {/* Mobile Menu Button*/}   <span className="bg-violet-700/50 px-2 py-0.5 rounded-md text-xs font-bold">$99</span>
                </Link>
              )}
              <button
                onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}
                className="p-2 rounded-lg bg-white/10 backdrop-blur-sm border border-white/20 text-white hover:bg-white/20 transition-colors duration-200"
              >
                <Menu className="w-5 h-5" />
              </button>
            </div>
          </div>
        </motion.div>
        
        {/* Mobile Menu Dropdown - Glassmorphism Style */}
        {isMobileMenuOpen && (
          <motion.div
            initial={{ opacity: 0, y: -10, scale: 0.95 }}
            animate={{ opacity: 1, y: 0, scale: 1 }}
            exit={{ opacity: 0, y: -10, scale: 0.95 }}
            transition={{ duration: 0.2 }}
            className="absolute top-full right-4 mt-2 w-64 bg-gray-900/90 backdrop-blur-xl border border-gray-700/50 rounded-xl shadow-xl z-50 md:hidden"
          >
            <div className="p-4">
              <div className="flex flex-col space-y-3">
                <a 
                  href="#features" 
                  className="flex items-center justify-between px-3 py-2 text-sm font-medium text-white/90 hover:text-white hover:bg-white/10 rounded-lg transition-all duration-200"
                  onClick={() => setIsMobileMenuOpen(false)}
                >
                  <span>Features</span>
                  <ChevronRight className="w-4 h-4 text-white/60" />
                </a>
                <a 
                  href="#benefits" 
                  className="flex items-center justify-between px-3 py-2 text-sm font-medium text-white/90 hover:text-white hover:bg-white/10 rounded-lg transition-all duration-200"
                  onClick={() => setIsMobileMenuOpen(false)}
                >
                  <span>Benefits</span>
                  <ChevronRight className="w-4 h-4 text-white/60" />
                </a>
                <a 
                  href="#demo" 
                  className="flex items-center justify-between px-3 py-2 text-sm font-medium text-white/90 hover:text-white hover:bg-white/10 rounded-lg transition-all duration-200"
                  onClick={() => setIsMobileMenuOpen(false)}
                >
                  <span>How it Works</span>
                  <ChevronRight className="w-4 h-4 text-white/60" />
                </a>
                <a 
                  href="#preview" 
                  className="flex items-center justify-between px-3 py-2 text-sm font-medium text-white/90 hover:text-white hover:bg-white/10 rounded-lg transition-all duration-200"
                  onClick={() => setIsMobileMenuOpen(false)}
                >
                  <span>Preview</span>
                  <ChevronRight className="w-4 h-4 text-white/60" />
                </a>
                <a 
                  href="#showcase" 
                  className="flex items-center justify-between px-3 py-2 text-sm font-medium text-white/90 hover:text-white hover:bg-white/10 rounded-lg transition-all duration-200"
                  onClick={() => setIsMobileMenuOpen(false)}
                >
                  <span>Library</span>
                  <ChevronRight className="w-4 h-4 text-white/60" />
                </a>
                <a 
                  href="#pricing" 
                  className="flex items-center justify-between px-3 py-2 text-sm font-medium text-white/90 hover:text-white hover:bg-white/10 rounded-lg transition-all duration-200"
                  onClick={() => setIsMobileMenuOpen(false)}
                >
                  <span>Pricing</span>
                  <ChevronRight className="w-4 h-4 text-white/60" />
                </a>
                
                {/* Mobile Auth Buttons */}
                <div className="border-t border-white/20 pt-3 mt-3 space-y-3">
                  {isAuthenticated ? (
                    <Link 
                      to="/dashboard" 
                      className="flex items-center justify-between w-full rounded-xl px-4 py-3 text-white font-medium text-sm transition-all duration-200 bg-gradient-to-r from-violet-600 to-violet-500 hover:from-violet-700 hover:to-violet-600"
                      onClick={() => setIsMobileMenuOpen(false)}
                    >
                      <span>Dashboard</span>
                      <ChevronRight className="w-4 h-4" />
                    </Link>
                  ) : (
                    <>
                      <Link 
                        to="/auth" 
                        className="flex items-center justify-between w-full rounded-lg px-4 py-3 text-white/90 hover:text-white hover:bg-white/10 transition-all duration-200"
                        onClick={() => setIsMobileMenuOpen(false)}
                      >
                        <span>Sign In</span>
                      </Link>
                      <Link 
                        to="#pricing"
                        onClick={(e) => {
                          e.preventDefault();
                          document.getElementById('pricing')?.scrollIntoView({ behavior: 'smooth' });
                          setIsMobileMenuOpen(false);
                        }}
                        className="flex items-center justify-between w-full rounded-xl px-4 py-3 bg-gradient-to-r from-violet-600 to-violet-500 text-white font-semibold text-sm transition-all duration-200 hover:from-violet-700 hover:to-violet-600"
                      >
                        <span>View Pricing Plans</span>
                      </Link>
                    </>
                  )}
                </div>
              </div>
            </div>
          </motion.div>
        )}
      </nav>

      {/* Hero Section */}
      <section className="hero-section relative pt-32 pb-10 overflow-hidden" style={{ background: 'linear-gradient(180deg, #0f0f23 0%, #1a1a2e 50%, #000000 100%)', position: 'relative', zIndex: 1 }}>
        <div className="absolute inset-0 bg-grid-light pointer-events-none"></div>

        <div className="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 flex flex-col items-center">
          <div className="text-center">
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              className="mb-4"
            >
              <motion.div
                initial={{ scale: 0.8, opacity: 0 }}
                animate={{ scale: 1, opacity: 1 }}
                transition={{ delay: 0.2, duration: 0.6 }}
                className="flex flex-wrap gap-2 sm:gap-3 justify-center mb-4 sm:mb-6"
              >
                <div className="inline-flex items-center px-4 py-2 bg-gradient-to-r from-violet-500/20 to-purple-500/20 backdrop-blur-md border border-violet-400/30 rounded-full text-xs text-white/90 shadow-[0_8px_32px_0_rgba(139,69,219,0.3)] hover:shadow-[0_12px_40px_0_rgba(139,69,219,0.4)] transition-all duration-300">
                  <Sparkles className="w-3 h-3 sm:w-4 sm:h-4 mr-1 sm:mr-2 text-violet-300" />
                  Instant access
                </div>
                <div className="inline-flex items-center px-4 py-2 bg-gradient-to-r from-blue-500/20 to-cyan-500/20 backdrop-blur-md border border-blue-400/30 rounded-full text-xs text-white/90 shadow-[0_8px_32px_0_rgba(59,130,246,0.3)] hover:shadow-[0_12px_40px_0_rgba(59,130,246,0.4)] transition-all duration-300">
                  <Star className="w-3 h-3 sm:w-4 sm:h-4 mr-1 sm:mr-2 text-blue-300" />
                  Lifetime updates
                </div>
              </motion.div>
              <h1 className="text-[9.4vw] sm:text-7xl md:text-7xl lg:text-8xl leading-[1.1] sm:leading-[1.05] will-change-transform font-bold text-white mb-6 drop-shadow-[0_2px_16px_rgba(80,0,180,0.18)]">
              <span className="block text-[9vw] sm:text-8xl md:text-8xl lg:text-8xl leading-[1.0] sm:leading-[1.05] tracking-tight will-change-transform">
                Choose any                 <span className="mt-1 sm:mt-1 text-[9vw] sm:text-8xl md:text-8xl lg:text-8xl leading-[1.4] sm:leading-[1.4] tracking-tight gradient-text will-change-transform">section</span> <br />to add on your <span className="bg-gradient-to-r from-[#7ab55c] to-[#96BF47] bg-clip-text text-transparent dark:bg-clip-text dark:text-transparent light:text-transparent"> store</span></span>

              </h1>
              <p className="text-base sm:text-l text-gray-300 mb-8 max-w-3xl sm:max-w-2xl lg:max-w-3xl mx-auto leading-normal sm:leading-relaxed px-4 sm:px-8 lg:px-0">
                Transform your Shopify store with professional best brands components that convert. — without expensive themes or plugins.
              </p>

              {/* Works with section 
              <div className="mb-12 flex flex-col items-center">
                <p className="text-gray-400 text-sm mb-4">Works with:</p>
                <div className="flex items-center gap-6">
                  <img 
                    src="/icon-shopify.png" 
                    alt="Shopify" 
                    className="h-8 w-8 object-contain opacity-80 hover:opacity-100 transition-opacity"
                  />
                  <img 
                    src="/icon-woocommerce.png" 
                    alt="WooCommerce" 
                    className="h-8 w-8 object-contain opacity-80 hover:opacity-100 transition-opacity"
                  />
                  <img 
                    src="/icon-wordpress.png" 
                    alt="WordPress" 
                    className="h-8 w-8 object-contain opacity-80 hover:opacity-100 transition-opacity"
                  />
                </div>
              </div>*/}
              {/* Searchbar, badges, slider, etc. restent, mais adapter les backgrounds et textes dans la suite */}

              {/* Enhanced Searchbar with innovative placeholder animation */}
              <div className="mt-10 w-full flex flex-col items-center max-w-8xl mx-auto">
                {/* Premium Searchbar inspired by competitor */}
                <motion.div
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.6 }}
                  className="w-full max-w-sm sm:max-w-4xl mx-auto relative px-4 sm:px-0"
                >
                  {/* Enhanced premium container */}
                  <div 
                    className="relative z-20"
                    style={{
                      filter: 'drop-shadow(0 8px 32px rgba(0, 0, 0, 0.08))'
                    }}
                  >
                    <input
                      type="text"
                      value={search}
                      onChange={e => setSearch(e.target.value)}
                      className="w-full pl-12 pr-20 py-4 border-0 focus:ring-0 text-[16px] relative z-30 rounded-xl transition-all duration-500 focus:shadow-2xl focus:shadow-blue-500/20"
                      style={{
                        background: 'linear-gradient(135deg, rgba(255, 255, 255, 0.98) 0%, rgba(248, 250, 252, 0.98) 100%)',
                        boxShadow: 'rgba(0, 0, 0, 0.08) 0px 8px 32px, rgba(255, 255, 255, 0.8) 0px 1px 0px inset'
                      }}
                    />
                    
                    {/* Animated placeholder */}
                    {!search && (
                      <div 
                        className="absolute inset-0 flex items-center pointer-events-none z-30" 
                        style={{ paddingLeft: '3rem' }}
                      >
                        <span className="text-gray-400 relative">
                          {placeholderText.split('').map((char, index) => (
                            <span
                              key={index}
                              className="inline-block"
                              style={{
                                animation: `0.6s ease-out ${index * 0.05}s 1 normal both running fadeInChar, 2s ease-in-out ${index * 0.1}s infinite normal none running sparkle`,
                                textShadow: 'rgba(59, 130, 246, 0.3) 0px 0px 8px'
                              }}
                            >
                              {char === ' ' ? '\u00A0' : char}
                            </span>
                          ))}
                          <span 
                            className={`inline-block w-0.5 h-5 bg-gray-400 ml-1 transition-opacity duration-150 ${
                              cursorVisible ? 'opacity-100' : 'opacity-0'
                            }`}
                          />
                        </span>
                      </div>
                    )}
                    
                    {/* Enhanced search icon */}
                    <div className="absolute left-4 top-1/2 transform -translate-y-1/2 pointer-events-none z-30">
                      <Search className="w-5 h-5 text-gray-500" />
                    </div>
                    
                    {/* Keyboard shortcut badge */}
                    <div className="absolute right-4 top-1/2 transform -translate-y-1/2 pointer-events-none z-30">
                      <div className="flex items-center gap-1 px-2.5 py-1.5 bg-gray-100 rounded-md border border-gray-200 text-sm text-gray-500">
                        <span>⌘</span>
                        <span>K</span>
                      </div>
                    </div>
                  </div>
                </motion.div>

                {/* Badges - Responsive: wrapped on desktop, horizontal scroll on mobile */}
                <motion.div
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.6, delay: 0.1 }}
                  className="w-full mt-4"
                >
                  
                  {/* Unified horizontal slider for desktop and mobile */}
                  <div className="w-full">
                    <div className="flex gap-2 overflow-x-auto pb-2 scrollbar-hide px-4 pt-2 justify-start sm:justify-center">
                      {displayTags.map(tag => {
                        const tagStyle = getCategoryStyle(tag);
                        const isActive = activeTag === tag;
                        
                        return (
                          <button
                            key={tag}
                            onClick={() => setActiveTag(tag)}
                            data-fb-track="false"
                            className={`${isActive ? tagStyle.activeBg || tagStyle.bg.replace('/60', '/90') : tagStyle.bg} ${tagStyle.border} px-3 py-2 rounded-lg text-sm ${tag === 'All' ? 'text-black' : 'text-gray-200'} border flex items-center ${tagStyle.emoji ? 'gap-2' : 'gap-0'} transition-all hover:opacity-80 hover:scale-105 flex-shrink-0 ${
                              isActive ? 'shadow-xl scale-105 ring-1 ring-white/20' : 'shadow-md'
                            }`}
                          >
                            {tagStyle.emoji && <span className="text-[10px]">{tagStyle.emoji}</span>}
                            {tag}
                          </button>
                        );
                      })}
                    </div>
                  </div>
                </motion.div>

                {/* MINI-SLIDER ISOLATED WRAPPER - MOBILE RESPONSIVE */}
                <div className="w-full mt-6 mx-auto relative">
                  <div 
                    className="w-full scrollbar-hide px-3 sm:px-0"
                    ref={miniSliderRef}
                    onMouseEnter={() => setIsMiniSliderHovered(true)}
                    onMouseLeave={() => setIsMiniSliderHovered(false)}
                    style={{ 
                      minHeight: '20rem', 
                      maxHeight: '22rem',
                      overflowX: 'auto',
                      overflowY: 'hidden'
                    }}
                  >
                    <div className="flex gap-4 sm:gap-4 h-full py-3">
                      {/* ⚡ AFFICHAGE DIRECT - Plus de placeholders ni loader */}
                      {filteredModules.length === 0 ? (
                        <div className="text-gray-400 text-center w-full py-8 flex items-center justify-center">
                          Loading modules...
                        </div>
                      ) : (
                        filteredModules.map((module) => (
                          <div 
                            key={module._id} 
                            className="flex-shrink-0 w-80 sm:w-72"
                            style={{ height: 'calc(100% - 1.5rem)' }}
                          >
                            <ModuleCard 
                              module={module} 
                              showAddButton={false}
                              showDescription={false}
                              showPreviewButton={false}
                              customAddButton={{
                                text: module.isFree ? "Customize & Add" : "Customize & Add",
                                onClick: () => {
                                  if (module.isFree) {
                                    // Redirect to public editor with module slug
                                    navigate(`/editor/${module.slug}`);
                                  } else {
                                    // Scroll to pricing section
                                    document.getElementById('pricing')?.scrollIntoView({ behavior: 'smooth' });
                                  }
                                }
                              }}
                              className="w-full h-full flex flex-col"
                            />
                          </div>
                        ))
                      )}
                    </div>
                  </div>
                </div>

                {/* Free Test Banner - Call to Action */}
                <section className="w-full mt-6 mb-4">
                  <div className="max-w-4xl mx-auto px-4 sm:px-0">
                    <div className="relative overflow-hidden rounded-xl bg-gradient-to-r from-violet-600 via-purple-600 to-violet-700 p-2 shadow-xl">
                      {/* Background decoration */}
                      <div className="absolute inset-0 bg-gradient-to-r from-violet-600/20 to-purple-600/20"></div>
                      <div className="absolute top-0 right-0 w-32 h-32 bg-white/10 rounded-full blur-3xl"></div>
                      <div className="absolute bottom-0 left-0 w-24 h-24 bg-white/5 rounded-full blur-2xl"></div>
                      
                      {/* Content */}
                      <div className="relative z-10 text-center">
                        <p className="text-white/90 text-sm max-w-2xl mx-auto">
                          <span className="hidden sm:inline">Click on any module with a <span className="bg-green-500 text-white px-2 py-0.5 rounded-full text-xs font-semibold">Free</span> badge above to test our editor instantly - no signup required!</span>
                          <span className="inline sm:hidden">Tap <span className="bg-green-500 text-white px-2 py-0.5 rounded-full text-xs font-semibold">Free</span> modules above to test instantly!</span>
                        </p>
                      </div>
                    </div>
                  </div>
                </section>

                {/* Key Features Section - Dark theme adapted */}
                <section className="w-full mt-4 mb-4">
                  <div className="px-4 sm:px-0 max-w-4xl mx-auto">
                    <div className="flex flex-wrap gap-2 justify-center sm:justify-between">
                      {[
                        { 
                          icon: (<svg width="16" height="16" fill="none" stroke="currentColor" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" viewBox="0 0 24 24"><path d="M13 2L3 14h9l-1 8 10-12h-9l1-8z"/></svg>), 
                          label: 'Fast', 
                          description: 'Instant loading'
                        },
                        { 
                          icon: (<svg width="16" height="16" fill="none" stroke="currentColor" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" viewBox="0 0 24 24"><path d="M16 18l6-6-6-6M8 6l-6 6 6 6"/></svg>), 
                          label: 'No code', 
                          description: 'Drag & drop interface'
                        },
                        { 
                          icon: (<svg width="16" height="16" fill="none" stroke="currentColor" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" viewBox="0 0 24 24"><circle cx="12" cy="12" r="10"/><path d="M8 12l2 2 4-4"/></svg>), 
                          label: 'Conversion', 
                          description: 'Increase your sales'
                        },
                        { 
                          icon: (<svg width="16" height="16" fill="none" stroke="currentColor" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" viewBox="0 0 24 24"><rect x="3" y="7" width="18" height="13" rx="2"/><path d="M16 3v4M8 3v4"/></svg>), 
                          label: 'Shopify', 
                          description: 'Native integration'
                        },
                      ].map((feature, i) => (
                        <div 
                          key={i}
                          className="bg-white/5 backdrop-blur-sm flex flex-row items-center p-2.5 rounded-md w-[calc(50%-4px)] sm:w-[calc(25%-6px)] border border-white/10"
                        >
                          <div className="flex-shrink-0 mr-2.5">
                            <div className="inline-flex items-center justify-center rounded bg-violet-500/20 w-7 h-7 text-violet-300">
                              {feature.icon}
                            </div>
                          </div>
                          <div className="flex-1 min-w-0 text-left">
                            <h3 className="text-sm font-medium text-white">
                              {feature.label}
                            </h3>
                            <p className="text-[11px] text-gray-300 leading-tight">
                              {feature.description}
                            </p>
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                </section>

                {/* Glassmorphism banner for instant access - Dark theme */}
                <div className="w-full mt-[-4px] sm:mt-1 mb-10 px-4 sm:px-0">
                  <div className="flex flex-row items-center justify-between py-3.5 px-4 bg-white/5 backdrop-blur-sm border border-white/10 rounded-md max-w-4xl mx-auto shadow-lg">
                    <span className="text-sm font-normal text-white text-left sm:text-left flex-1">
                      <span className="hidden sm:inline">Instant access after subscription</span>
                      <span className="inline sm:hidden">Instant access</span>
                    </span>
                    <AnimatedButton
                      variant="primary"
                      size="sm"
                      onClick={() => document.getElementById('pricing')?.scrollIntoView({ behavior: 'smooth' })}
                      className="bg-violet-600 text-white hover:bg-violet-700 text-xs px-4 py-1.5 shadow-md"
                      icon={<svg width="16" height="16" fill="none" stroke="currentColor" strokeWidth="2.2" strokeLinecap="round" strokeLinejoin="round" viewBox="0 0 24 24"><path d="M5 12h14M13 6l6 6-6 6"/></svg>}
                    >
                      View plans
                    </AnimatedButton>
                  </div>
                </div>
              </div>
            </motion.div>
          </div>
        </div>
        {/* SVG Divider - Disabled for now */}
        {/*
        <div style={{ position: 'absolute', left: 0, right: 0, bottom: 0, width: '100%', height: '96px', pointerEvents: 'none', zIndex: 2, lineHeight: 0 }}>
          <svg
            viewBox="0 -0.1 35.28 2.17"
            width="100%"
            height="96"
            preserveAspectRatio="none"
            style={{ display: 'block' }}
            aria-hidden="true"
            fill="none"
          >
            <path
              d="M35.28.31c-2.57.84-7.68.3-11.8.43-4.1.12-6.85.61-9.57.28C11.18.69 8.3-.16 5.3.02 2.3.22.57.85 0 .87v1.2h35.28z"
              fill="#0b0616"
              filter="drop-shadow(0 -8px 24px #7c3aed80)"
            />
          </svg>
        </div>
        */}
      </section>

      {/* Value Proposition Section */}
      <div id="features" style={{ position: 'relative', zIndex: 0, marginTop: '-1px' }}>
        <ValuePropositionSection 
          activeDemo={activeDemo}
          setActiveDemo={setActiveDemo}
          demoModules={demoModules}
        />
      </div>

      {/* No More Subscriptions Section */}
      <div id="benefits" style={{ marginTop: '-1px' }}>
        <NoMoreSubscriptionsSection />
      </div>

      {/* Transition Section */}
      <div style={{ marginTop: '-1px' }}>
        <TransitionSection />
      </div>

      {/* Workflow Section */}
      <div id="demo" style={{ marginTop: '-1px' }}>
        <WorkflowSection workflowSteps={workflowSteps} />
      </div>

      {/* Phone Preview Section */}
      <div id="preview" style={{ marginTop: '-1px' }}>
        <PhonePreviewSection phoneImage="/images/FULLSCREEN Liquidfy-result-shop-pp-1.png" />
      </div>

      {/* ROI Calculator Section <ROICalculatorSection />*/}


      {/* Modules Showcase Section */}
      <div id="showcase" style={{ marginTop: '-1px' }}>
        <ModulesShowcaseSection 
          filteredModules={filteredModules}
          activeTag={activeTag}
          setActiveTag={setActiveTag}
          badgeIcons={badgeIcons}
        />
      </div>

      {/* SVG Divider before Pricing */}
      <div style={{ position: 'relative', left: 0, right: 0, width: '100%', height: '96px', pointerEvents: 'none', zIndex: 2, lineHeight: 0, marginTop: '-1px' }}>
        <svg
          viewBox="0 -0.1 35.28 2.17"
          width="100%"
          height="96"
          preserveAspectRatio="none"
          style={{ display: 'block' }}
          aria-hidden="true"
          fill="none"
        >
          <path
            d="M35.28.31c-2.57.84-7.68.3-11.8.43-4.1.12-6.85.61-9.57.28C11.18.69 8.3-.16 5.3.02 2.3.22.57.85 0 .87v1.2h35.28z"
            fill="#0b0616"
            filter="drop-shadow(0 -8px 24px #7c3aed80)"
          />
        </svg>
      </div>

      {/* Pricing Section */}
      <div id="pricing" style={{ marginTop: '-1px' }}>
        <EarlyBirdPricingSection pricingPlans={pricingPlans} />
      </div>



      {/* Join Movement Section */}
      <div style={{ marginTop: '-1px' }}>
        <JoinMovementSection />
      </div>

      {/* FAQ Section */}
      <div style={{ marginTop: '-1px' }}>
        <FAQSection />
      </div>

      {/* Footer */}
      <footer className="py-16 bg-[#0a0616] relative overflow-hidden">
        {/* Dynamic Background Effects */}
        <div className="absolute inset-0">
          <div className="absolute inset-0 bg-grid-dark opacity-5"></div>
          <div className="absolute top-0 left-1/4 w-[400px] h-[400px] bg-violet-500/10 rounded-full blur-3xl"></div>
          <div className="absolute bottom-0 right-1/4 w-[500px] h-[500px] bg-blue-500/10 rounded-full blur-3xl"></div>
        </div>
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
          <div className="grid grid-cols-1 md:grid-cols-4 gap-8 mb-12">
            {/* Brand */}
            <div className="md:col-span-2">
              <div className="flex items-center space-x-3 mb-6">
                <img 
                  src="/LIQUIDFY-LOGO.png" 
                  alt="Liquidfy Logo" 
                  className="w-10 h-10 object-contain"
                />
                <span className="text-2xl font-bold text-white">Liquidfy</span>
              </div>
              <p className="text-gray-400 leading-relaxed max-w-md">
                The most comprehensive library of premium modules and sections for Shopify. 
                Transform your store with professional components that convert.
              </p>
              <div className="flex items-center space-x-4 mt-6">
                <div className="flex items-center space-x-1">
                  <Star className="w-4 h-4 text-yellow-400 fill-current" />
                  <span className="text-sm text-gray-400">4.9/5</span>
                </div>
                <span className="text-sm text-gray-600">•</span>
                <span className="text-sm text-gray-400">10,000+ stores</span>
                <span className="text-sm text-gray-600">•</span>
                <span className="text-sm text-gray-400">99.9% uptime</span>
              </div>
            </div>
            {/* Quick Links */}
            <div>
              <h4 className="font-semibold text-white mb-4">Library</h4>
              <div className="space-y-3">
                <Link to="/dashboard/library" className="block text-sm text-gray-400 hover:text-white transition-colors">Browse Modules</Link>
                <Link to="/dashboard/library?type=sections" className="block text-sm text-gray-400 hover:text-white transition-colors">Browse Sections</Link>
                <a href="#pricing" className="block text-sm text-gray-400 hover:text-white transition-colors">Pricing Plans</a>
                <Link to="/dashboard" className="block text-sm text-gray-400 hover:text-white transition-colors">Dashboard</Link>
              </div>
            </div>
            {/* Support */}
            <div>
              <h4 className="font-semibold text-white mb-4">Support</h4>
              <div className="space-y-3">
                <Link to="/help" className="block text-sm text-gray-400 hover:text-white transition-colors">Help Center</Link>
                <Link to="/dashboard/billing" className="block text-sm text-gray-400 hover:text-white transition-colors">Billing</Link>
                <Link to="/dashboard/settings" className="block text-sm text-gray-400 hover:text-white transition-colors">Account</Link>
                <a href="mailto:contact@liquidfy.app" className="block text-sm text-gray-400 hover:text-white transition-colors">Contact Us</a>
              </div>
            </div>
          </div>
          {/* Bottom Bar */}
          <div className="pt-8 border-t border-white/20">
            <div className="flex flex-col md:flex-row items-center justify-between space-y-4 md:space-y-0">
              <div className="text-sm text-gray-400">
                © 2024 Liquidfy. All rights reserved.
              </div>
              <div className="flex items-center space-x-6">
                <Link to="/legal/privacy" className="text-sm text-gray-400 hover:text-white transition-colors">Privacy Policy</Link>
                <Link to="/legal/terms" className="text-sm text-gray-400 hover:text-white transition-colors">Terms of Service</Link>
                <Link to="/legal/refund" className="text-sm text-gray-400 hover:text-white transition-colors">Refund Policy</Link>
                <Link to="/legal/cookies" className="text-sm text-gray-400 hover:text-white transition-colors">Cookie Policy</Link>
              </div>
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
}



const demoModules = [
  {
    title: 'Modules Library',
    description: '100+ Premium Modules work with all platform.',
    improvement: 35,
    icon: Package,
    preview: (
      <div className="space-y-4">
        <div className="h-8 bg-blue-500 rounded"></div>
        <div className="grid grid-cols-2 gap-4">
          <div className="h-24 bg-gray-200 rounded"></div>
          <div className="h-24 bg-gray-200 rounded"></div>
        </div>
        <div className="h-4 bg-gray-200 rounded w-3/4"></div>
        <div className="h-4 bg-gray-200 rounded w-1/2"></div>
      </div>
    )
  },
  {
    title: 'Sections Library',
    description: '150+ Premium Shopify Pre-Made Section.',
    improvement: 42,
    icon: ShoppingCart,
    preview: (
      <div className="space-y-4">
        <div className="h-6 bg-green-500 rounded"></div>
        <div className="h-16 bg-gray-100 rounded border"></div>
        <div className="h-12 bg-blue-100 rounded border"></div>
        <div className="h-8 bg-gray-200 rounded w-2/3"></div>
      </div>
    )
  },
  {
    title: 'Liquidfy Editor',
    description: 'High performance editor to match your brand.',
    improvement: 28,
    icon: BarChart3,
    preview: (
      <div className="space-y-4">
        <div className="h-6 bg-purple-500 rounded"></div>
        <div className="grid grid-cols-3 gap-2">
          <div className="h-16 bg-gray-200 rounded"></div>
          <div className="h-16 bg-gray-200 rounded"></div>
          <div className="h-16 bg-gray-200 rounded"></div>
        </div>
        <div className="h-20 bg-gray-100 rounded"></div>
      </div>
    )
  }
];

const features = [
  {
    title: 'Premium Modules',
    description: 'Professionally designed modules that boost conversions and enhance user experience.',
    icon: Package
  },
  {
    title: 'Custom Sections',
    description: 'Beautiful, responsive sections that make your store stand out from the competition.',
    icon: Layers
  },
  {
    title: 'No Code Required',
    description: 'Simply copy and paste. No technical knowledge needed to transform your store.',
    icon: Code
  },
  {
    title: 'Mobile Optimized',
    description: 'All components are fully responsive and optimized for mobile devices.',
    icon: Globe
  },
  {
    title: 'Fast Performance',
    description: 'Lightweight components that load quickly and don\'t slow down your store.',
    icon: Zap
  },
  {
    title: '24/7 Support',
    description: 'Get help whenever you need it with our dedicated support team.',
    icon: Users
  }
];

// Unified onboarding steps for all sections (used in WorkflowSection and elsewhere)
const steps = [
  {
    title: '1. Browse & Discover',
    description: 'Explore our comprehensive library of premium modules and sections, each designed to solve specific conversion challenges.'
  },
  {
    title: '2. Copy & Customize',
    description: 'Simply copy the code and customize it to match your brand. No technical skills required – just copy, paste, and adjust.'
  },
  {
    title: '3. Launch & Optimize',
    description: 'Deploy your enhanced store and watch your conversions soar. Monitor performance and optimize for even better results.'
  }
];

const stats = [
  {
    value: '50+',
    label: 'Premium Modules',
    icon: Package,
    color: 'from-blue-500 to-purple-600'
  },
  {
    value: '100+',
    label: 'Shopify Sections',
    icon: Layers,
    color: 'from-green-500 to-blue-600'
  },
  {
    value: '10K+',
    label: 'Active Stores',
    icon: Store,
    color: 'from-orange-500 to-red-600'
  },
  {
    value: '99%',
    label: 'Uptime',
    icon: Shield,
    color: 'from-purple-500 to-pink-600'
  }
];

const pricingPlans = [
  {
    name: 'Free',
    description: 'Perfect for getting started',
    price: 0,
    featured: false,
    features: [
      '5 premium Modules per month',
      '3 premium Sections per month',
      'Limited customization',
      'Email support',
      'Mobile responsive',
      'Community access'
    ],
    limits: {
      modules: 5,
      sections: 3,
      stores: 1
    }
  },
  {
    name: 'Early Bird',
    description: 'Limited time lifetime deal',
    price: 99,
    featured: false,
    isEarlyBird: true,
    features: [
      'Instant access, no subscription',
      'Unlimited access to premium Modules',
      'Unlimited access to premium Sections',
      'Advanced Custom branding',
      'Priority support',
      'Future updates included',
      'A/B testing',
      'Custom branding',
      'Fast API Loader',
      'Future updates included'
    ],
    limits: {
      modules: 'Unlimited',
      sections: 'Unlimited',
      stores: 3
    }
  },
  {
    name: 'Starter',
    description: 'For growing businesses',
    price: 19.99,
    featured: true,
    features: [
      '50+ premium Modules',
      '25+ premium Sections',
      '5 Liquidfy Dashboard Stores',
      'Advanced customization',
      'Priority support',
      'A/B testing',
      'Custom branding',
      'API access'
    ],
    limits: {
      modules: '50+',
      sections: '25+',
      stores: 3
    }
  },
  {
    name: 'Enterprise',
    description: 'For large scale operations',
    price: 99,
    featured: false,
    features: [
      'Everything in Pro',
      'Unlimited premium Modules',
      'Unlimited premium Sections',
      'For multiple Ecom Brands',
      'Freelance and Agency ready',
      'Fast API Loader',
      'Most value subscription'
    ],
    limits: {
      modules: 'Unlimited',
      sections: 'Unlimited',
      stores: 'Unlimited'
    }
  }
];



// Unified workflow steps for onboarding and demo
const workflowSteps = [
  {
    title: '1. Browse & Discover',
    description: 'Explore our comprehensive library of premium modules and sections, each designed to solve specific conversion challenges.',
    time: '2-3 minutes',
    icon: Search,
    details: [
      'Filter by category and use case',
      'Preview each module in real-time',
      'Read detailed descriptions and benefits',
      'Check compatibility with your theme'
    ],
    demo: (
      <div className="relative w-full bg-gray-100 overflow-hidden rounded-lg">
        <video 
          autoPlay 
          loop 
          muted 
          playsInline
          preload="metadata"
          className="w-full h-full object-contain sm:object-cover rounded-lg"
          poster="/images/demo-modules-library.jpg"
        >
          <source src="/videos/workflow-step-1.mp4" type="video/mp4" />
          <div className="absolute inset-0 bg-gray-200 flex items-center justify-center">
            <p className="text-gray-500">Video not supported</p>
          </div>
        </video>
      </div>
    )
  },
  {
    title: '2. Copy & Customize',
    description: 'Simply copy the code and customize it to match your brand. No technical skills required – just copy, paste, and adjust.',
    time: '1-2 minutes',
    icon: Copy,
    details: [
      'One-click code copying',
      'Easy customization options',
      'Real-time preview updates',
      'Mobile-responsive by default'
    ],
    demo: (
      <div className="relative w-full bg-gray-100 overflow-hidden rounded-lg">
        <video 
          autoPlay 
          loop 
          muted 
          playsInline
          preload="metadata"
          className="w-full h-full object-contain sm:object-cover rounded-lg"
          poster="/images/demo-sections-library.jpg"
        >
          <source src="/videos/workflow-step-2.mp4" type="video/mp4" />
          <div className="absolute inset-0 bg-gray-200 flex items-center justify-center">
            <p className="text-gray-500">Video not supported</p>
          </div>
        </video>
      </div>
    )
  },
  {
    title: '3. Launch & Optimize',
    description: 'Deploy your enhanced store and watch your conversions soar. Monitor performance and optimize for even better results.',
    time: 'Instant',
    icon: Zap,
    details: [
      'Instant deployment & loading',
      'No performance impact',
      'A/B testing capabilities',
      'Continuous optimization'
    ],
    demo: (
      <div className="relative w-full bg-gray-100 overflow-hidden rounded-lg">
        <video 
          autoPlay 
          loop 
          muted 
          playsInline
          preload="metadata"
          className="w-full h-full object-contain sm:object-cover rounded-lg"
          poster="/images/demo-liquidfy-editor.jpg"
        >
          <source src="/videos/workflow-step-3.mp4" type="video/mp4" />
          <div className="absolute inset-0 bg-gray-200 flex items-center justify-center">
            <p className="text-gray-500">Video not supported</p>
          </div>
        </video>
      </div>
    )
  }
];